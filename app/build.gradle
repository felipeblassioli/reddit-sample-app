apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

repositories {
    jcenter()
    maven { url "https://clojars.org/repo/" }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "org.samples.blassioli.reddit"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode System.getenv("VERSION_CODE") as Integer ?: 1
        versionName System.getenv("VERSION_NAME") ?: "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}
apply plugin: 'com.noveogroup.android.check'
apply plugin: "jacoco"
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'me.tatarka.retrolambda'

check {
    abortOnError true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
    })
    androidTestCompile('com.novoda:rxpresso:0.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.hannesdorfmann.mosby3:mvp:3.0.3'
    compile 'com.hannesdorfmann.mosby3:mvp-lce:3.0.3'

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:customtabs:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.dmitrymalkovich.android:material-design-dimens:1.4'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    compile 'com.google.guava:guava:20.0'
    compile "com.google.dagger:dagger:2.9"
    annotationProcessor "com.google.dagger:dagger-compiler:2.9"

    provided 'javax.annotation:jsr250-api:1.0'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.3.2'
    testCompile 'org.robolectric:shadows-support-v4:3.3.2'

    testCompile 'org.mockito:mockito-core:2.0.2-beta'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    compile 'org.parceler:parceler-api:1.1.8'
    annotationProcessor 'org.parceler:parceler:1.1.8'
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/reports/jacoco")
}

// Source: https://medium.com/@rafael_toledo/setting-up-an-unified-coverage-report-in-android-with-jacoco-robolectric-and-espresso-ffe239aaf3fa
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*_ViewBinding.*',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
                      '**/*Module.*', // Modules for Dagger.
                      '**/*Dagger*.*', // Dagger auto-generated code.
                      '**/*MembersInjector*.*', // Dagger auto-generated code.
                      '**/*_Provide*Factory*.*',
                      '**/*_Factory.*', //Dagger auto-generated code
                      '**/*$*$*.*' // Anonymous classes generated by kotlin
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

tasks.coveralls {
    group = 'Coverage reports'
    description = 'Uploads the aggregated coverage report to Coveralls'

    dependsOn jacocoTestReport
    onlyIf { System.env.'CI' }
}